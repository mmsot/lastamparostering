apiVersion: v1
kind: Template
metadata:
  name: optaweb-employee-rostering
  annotations:
    description: "Employee rostering web application and REST service based on OptaPlanner."
    iconClass: "icon-wildfly"
    tags: "optaplanner,wildfly,java"

labels:
  app: "employee-rostering"

parameters:
  - name: SOURCE_REPOSITORY_URL
    description: "The URL of the repository with the application source code."
    required: true
    value: "https://github.com/kiegroup/optaweb-employee-rostering"
    # TODO add datasource, JPA dialect, etc

objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "webapp-image"
    spec:
      tags:
        - name: latest

  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: "webapp-build"
    spec:
      triggers:
        - type: ImageChange
      source:
        type: Binary
      strategy:
        sourceStrategy:
          from:
            kind: DockerImage
            # Uses WildFly 11.0
            name: "openshift/wildfly-110-centos7:latest"
      output:
        to:
          kind: ImageStreamTag
          name: "webapp-image:latest"
      resources:
        limits:
          cpu: 1
          memory: 1Gi

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "webapp-deployment"
    spec:
      template:
        metadata:
          labels:
            myId: "webapp-template"
        spec:
          containers:
          - name: "webapp-container"
            image: "webapp-image"
            ports:
              - containerPort: 8080
                protocol: TCP
            resources:
              limits:
                cpu: 2
                memory: 2Gi
      replicas: 1
      selector:
        myId: "webapp-template"
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            from:
              kind: ImageStreamTag
              name: "webapp-image:latest"
            containerNames:
              - "webapp-container"

  - kind: Service
    apiVersion: v1
    metadata:
      name: "webapp-service"
    spec:
      selector:
        myId: "webapp-template"
      ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080

  - kind: Route
    apiVersion: v1
    metadata:
      name: "webapp"
    spec:
      # host: employee-rostering.optaplanner.org
      port:
        targetPort: 8080
      to:
        kind: Service
        name: "webapp-service"
